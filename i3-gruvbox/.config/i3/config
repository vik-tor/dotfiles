# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $alt Mod1
set $TERMINAL kitty -e

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Fira Sans Medium 8

# Title alignment
title_align center

########## BORDERS ##########

# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border none
default_floating_border none

# Hide borders
hide_edge_borders both

# change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

########## SESSION_STARTUP ##########

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

exec_always --no-startup-id i3-auto-layout

# exec --no-startup-id nm-applet

# Compositor, for that nice blur effect and no screen tearing
exec_always --no-startup-id picom -b --experimental-backends --dbus

# Launch polybar
# exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# exec --no-startup-id dunst

# Set a random wallpaper on startup, from the specified folder
exec --no-startup-id feh --recursive --bg-fill --randomize ~/Pictures/Backgrounds

# exec --no-startup-id mpDris2

# Start iceweasel on workspace 3, then switch back to workspace 1
# (Being a command-line utility, i3-msg does not support startup notifications,
#  hence the exec --no-startup-id.)
# (Starting iceweasel with i3’s exec command is important in order to make i3
#  create a startup notification context, without which the iceweasel window(s)
#  cannot be matched onto the workspace on which the command was started.)
# exec --no-startup-id i3-msg 'workspace 3; exec iceweasel; workspace 1'

########## KEYBINDINGS ##########

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Screen brightness controls
bindsym XF86MonBrightnessUp exec --no-startup-id "xbacklight -inc 5"
bindsym XF86MonBrightnessDown exec --no-startup-id "xbacklight -dec 5"
bindsym Ctrl+XF86MonBrightnessUp exec --no-startup-id "ddccontrol -r 0x10 -W +10 dev:/dev/i2c-4"
bindsym Ctrl+XF86MonBrightnessDown exec --no-startup-id "ddccontrol -r 0x10 -W -10 dev:/dev/i2c-4"

# MPRIS control (requires playerctl and relevant MPRIS support to work)
bindsym Ctrl+$alt+Up exec --no-startup-id "mpc play"
bindsym Ctrl+$alt+Down exec --no-startup-id "mpc pause"
bindsym Ctrl+$alt+Right exec --no-startup-id "mpc next"
bindsym Ctrl+$alt+Left exec --no-startup-id "mpc prev"

# Dunst
# bindsym $alt+Shift+x exec --no-startup-id killall -SIGUSR1 dunst
# bindsym $alt+Shift+s exec --no-startup-id killall -SIGUSR2 dunst
# bindsym $alt+Shift+k exec --no-startup-id killall dunst
# bindsym $alt+Shift+d exec --no-startup-id dunst

bindsym $alt+Shift+h exec --no-startup-id "dunstctl history-pop"
bindsym $alt+Shift+space exec --no-startup-id "dunstctl set-paused toggle"
bindsym $alt+Shift+Return exec --no-startup-id "dunstctl action"
# bindsym $alt+Shift+/ exec --no-startup-id "dunstctl context"
bindsym $alt+Shift+p exec --no-startup-id "dunstctl is-paused"
bindsym $alt+Shift+c exec --no-startup-id "dunstctl close"
bindsym $alt+Shift+q exec --no-startup-id "dunstctl close-all"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

	# start a terminal
bindsym $mod+Return exec kitty -e

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop
bindcode $mod+40 exec "rofi -modi drun,run -show drun"

# Take a screenshot
bindsym $mod+Shift+s exec $HOME/.config/rofi/bin/screenshot

bindsym $mod+m exec $HOME/.local/bin/modem

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

########## WORKSPACES ##########

# navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: "
set $ws2 "2: ﬏"
set $ws3 "3: "
set $ws4 "4: "
set $ws5 "5: "
set $ws6 "6: "
set $ws7 "7 VII"
set $ws8 "8 VIII"
set $ws9 "9 IX"
set $ws10 "10 X"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

########## Assign windows to workspaces

assign [class="Microsoft-edge"] → 3

assign [class="^Code$"] → 2

assign [class="Mailspring"] 5

########## SESSION ##########

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

bindsym $mod+Shift+e exec "sh $HOME/.config/rofi/bin/powermenu"

########## CLIENT RULES ##########

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# remove borders from windows
for_window [class="^.*"] border pixel 0

# enable floating on all dialogues
for_window [class="Yad"] floating enable

########## WINDOW_RESIZE ##########

# resize window (you can also use the mouse for that)
mode "resize" {
	# These bindings trigger as soon as you enter the resize mode
	# Pressing left will shrink the window’s width.[119;10u]
	# Pressing right will grow the window’s width.
	# Pressing up will shrink the window’s height.
	# Pressing down will grow the window’s height.
	bindsym j resize shrink width 10 px or 10 ppt
	bindsym k resize grow height 10 px or 10 ppt
	bindsym l resize shrink height 10 px or 10 ppt
	bindsym semicolon resize grow width 10 px or 10 ppt
	
	# same bindings, but for the arrow keys
	bindsym Left resize shrink width 10 px or 10 ppt
	bindsym Down resize grow height 10 px or 10 ppt
	bindsym Up resize shrink height 10 px or 10 ppt
	bindsym Right resize grow width 10 px or 10 ppt
	
	# back to normal: Enter or Escape or $mod+r
	bindsym Return mode "default"
	bindsym Escape mode "default"
	bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

########## COLORS ##########

# Palette from ~/.Xresources
# set_from_resource $background			background
# set_from_resource $foreground			foreground
# set_from_resource $black     			color0
# set_from_resource $dark_red     	color1
# set_from_resource $dark_green     color2
# set_from_resource $dark_yellow  	color3
# set_from_resource $dark_blue     	color4
# set_from_resource $dark_magenta 	color5
# set_from_resource $dark_cyan     	color6
# set_from_resource $light_grey     color7
# set_from_resource $dark_grey     	color8
# set_from_resource $red     				color9
# set_from_resource $green    			color10
# set_from_resource $yellow    			color11
# set_from_resource $blue    				color12
# set_from_resource $magenta    		color13
# set_from_resource $cyan    				color14
# set_from_resource $white    			color15

# Client(window) colors
# class										border 			bg					text			indicator		child_border
client.focused          	#28282800 	#28282880	 	#fabd2f		#454948			#fe8019
client.focused_inactive		#28282800 	#28282850		#fbf1c7 	#454948
client.unfocused        	#3c383600 	#28282810		#ebdbb2 	#454948
client.urgent           	#CB4B1600 	#1d202180		#fb4934	 	#268BD2
client.placeholder      	#00000000 	#0c0c0c 		#ffffff 	#000000 
client.background       	#1d202100

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
 bar {
	i3bar_command i3bar --transparency
	status_command i3status-rs $HOME/.config/i3status-rust/config.toml
	# status_command i3blocks
	font pango:Roboto Medium 8
	tray_output primary
	# tray_output none
	# tray_padding 2
	position bottom
	workspace_min_width 20
	# strip_workspace_numbers yes
	strip_workspace_name yes
	# mode hide
	# hidden_state hide
	# modifier $mod
	bindsym button4 nop
	bindsym button5 nop
	colors {
		background #1d202180
	  statusline #ebdbb2
	 	separator  #928374
	 	# class							border  			backgr. 			text
	  focused_workspace  	#28282880 		#fabd2fcc		#1d2021
	  active_workspace   	#28282880 		#1d202180			#ebdbb2
	  inactive_workspace 	#28282880 		#1d202180 		#ebdbb2
	  binding_mode       	#28282880 		#1d202180 		#ebdbb2
	  urgent_workspace   	#28282880 	 	#fbf1c780 		#1d2021
	}
 }

########## i3_GAPS ##########

# Set inner/outer gaps
gaps inner 4
gaps outer -2

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders no_gaps

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
	bindsym o      mode "$mode_gaps_outer"
	bindsym i      mode "$mode_gaps_inner"
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
	bindsym plus  gaps inner current plus 5
	bindsym minus gaps inner current minus 5
	bindsym 0     gaps inner current set 0

	bindsym Shift+plus  gaps inner all plus 5
	bindsym Shift+minus gaps inner all minus 5
	bindsym Shift+0     gaps inner all set 0

	bindsym Return mode "default"
	bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
	bindsym plus  gaps outer current plus 5
	bindsym minus gaps outer current minus 5
	bindsym 0     gaps outer current set 0

	bindsym Shift+plus  gaps outer all plus 5
	bindsym Shift+minus gaps outer all minus 5
	bindsym Shift+0     gaps outer all set 0

	bindsym Return mode "default"
	bindsym Escape mode "default"
}

# Press $mod+l followed by either f, t, Escape or Return to launch firefox,
# thunderbird or return to the default mode, respectively.
set $mode_launcher Launch: [n]emo [c]ode in[k]scape [i]nsomnia [e]dge [f]oliate [m]ail
bindsym $mod+o mode "$mode_launcher"

mode "$mode_launcher" {
    bindsym f exec firefox
    bindsym t exec thunderbird

    bindsym Escape mode "default"
    bindsym Return mode "default"
}
